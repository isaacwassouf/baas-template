services:
  nginx:
    image: nginx:1.20.0
    container_name: nginx
    ports:
      - "80:80"
      - "50052:50052"
    depends_on:
      - cryptography
      - email
      - analytics
      - schema
      - content
      - users
      - api-gateway
      - dashboard
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - proxy

  users:
    image: registry.digitalocean.com/baas-registry/baas-users:latest
    environment:
      GO_ENV: "production"
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_SYSTEM}

      EMAIL_SERVICE_HOST: ${EMAIL_SERVICE_HOST}
      EMAIL_SERVICE_PORT: ${EMAIL_SERVICE_PORT}

      CRYPTOGRAPHY_SERVICE_HOST: ${CRYPTOGRAPHY_SERVICE_HOST}
      CRYPTOGRAPHY_SERVICE_PORT: ${CRYPTOGRAPHY_SERVICE_PORT}

      JWT_SECRET: ${JWT_SECRET}

      GITHUB_REDIRECT_URI: ${GITHUB_REDIRECT_URI}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - proxy

  #################### The gRPC Schema Service Container ########################
  schema:
    image: registry.digitalocean.com/baas-registry/baas-schema:latest
    environment:
      GO_ENV: "production"
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_SCHEMA}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - proxy

  ################### The gRPC Schema Service Container ########################
  content:
    image: registry.digitalocean.com/baas-registry/baas-content:latest
    environment:
      GO_ENV: "production"
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_SCHEMA}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - proxy

  #################### The gRPC Cryptography Service Container ########################
  cryptography:
    image: registry.digitalocean.com/baas-registry/baas-cryptography:latest
    environment:
      GO_ENV: "production"
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_SYSTEM}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - proxy

  #################### The gRPC Email Service Container ########################
  email:
    image: registry.digitalocean.com/baas-registry/baas-email:latest
    environment:
      GO_ENV: "production"
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_PORT: ${MYSQL_PORT}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_SYSTEM}
      CRYPTOGRAPHY_SERVICE_HOST: ${CRYPTOGRAPHY_SERVICE_HOST}
      CRYPTOGRAPHY_SERVICE_PORT: ${CRYPTOGRAPHY_SERVICE_PORT}
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - proxy

  #################### The gRPC Analytics Service Container ########################
  analytics:
    image: registry.digitalocean.com/baas-registry/baas-analytics:latest
    environment:
      GO_ENV: "production"
      MONGODB_HOST: ${MONGODB_HOST}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_USER: ${MONGODB_USER}
      MONGODB_PORT: ${MONGODB_PORT}
      MONGODB_DB: ${MONGODB_DB}
    depends_on:
      - mongo
    networks:
      - proxy

  #################### The API Gateway Service Container ############
  api-gateway:
    image: registry.digitalocean.com/baas-registry/baas-api-gateway:latest
    environment:
      NODE_ENV: "production"

      DASHBOARD_BASE_URL: ${DASHBOARD_BASE_URL}
      CLIENT_BASE_URL: ${CLIENT_BASE_URL}
      CLIENT_REDIRECT_AFTER_LOGIN: ${CLIENT_REDIRECT_AFTER_LOGIN}

      EMAIL_SERVICE_HOST: ${EMAIL_SERVICE_HOST}
      EMAIL_SERVICE_PORT: ${EMAIL_SERVICE_PORT}

      USERS_SERVICE_HOST: ${USERS_SERVICE_HOST}
      USERS_SERVICE_PORT: ${USERS_SERVICE_PORT}

      SCHEMA_SERVICE_HOST: ${SCHEMA_SERVICE_HOST}
      SCHEMA_SERVICE_PORT: ${SCHEMA_SERVICE_PORT}

      CONTENT_SERVICE_HOST: ${CONTENT_SERVICE_HOST}
      CONTENT_SERVICE_PORT: ${CONTENT_SERVICE_PORT}

      ANALYTICS_SERVICE_HOST: ${ANALYTICS_SERVICE_HOST}
      ANALYTICS_SERVICE_PORT: ${ANALYTICS_SERVICE_PORT}

      JWT_SECRET: ${JWT_SECRET}

      DASHBOARD_COOKIE_DOMAIN: ${DASHBOARD_COOKIE_DOMAIN}

      GITHUB_REDIRECT_URI: ${GITHUB_REDIRECT_URI}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
    networks:
      - proxy
    depends_on:
      - users
      - email
      - analytics
      - schema
      - content

  #################### The Dashboard Container ########################
  dashboard:
    image: registry.digitalocean.com/baas-registry/baas-dashboard:latest
    environment:
      JWT_SECRET: ${JWT_SECRET}
      PUBLIC_API_BASE_URL: ${API_BASE_URL}
    networks:
      - proxy
    depends_on:
      - api-gateway

  #################### The MongoDB Container ########################
  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
    networks:
      - proxy

  #################### The MySQL Container ########################
  mysql:
    image: mysql:8.4
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_SYSTEM}
    volumes:
      - mysql-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

    ports:
      - "3307:3306"
    networks:
      - proxy

volumes:
  mongo-data:
  mysql-data:

networks:
  proxy:
    external: true
